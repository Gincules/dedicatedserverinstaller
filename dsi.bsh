#!/bin/bash
function func_gamelist {
	local menu=1
	local choice

	while true; do
		if [ ${menu} -eq 1 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "#  1 - 7 Days to Die Dedicated Server                      #"
			echo "#  2 - ARK: Survival Evolved Dedicated Server              #"
			echo "#  3 - Arma 3 Dedicated Server                             #"
			echo "#  4 - Black Mesa: Deathmatch Dedicated Server             #"
			echo "#  5 - BrainBread 2 Dedicated Server                       #"
			echo "#  6 - Blade Symphony Dedicated Server                     #"
			echo "#  7 - BlazeRush Dedicated Server                          #"
			echo "#  8 - Counter-Strike Dedicated Server                     #"
			echo "#  9 - Counter-Strike Global Offensive Dedicated Server    #"
			echo "# 10 - Counter-Strike: Condition Zero Dedicated Server     #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <n> next page                                            #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${menu} -eq 2 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 11 - Counter-Strike: Source Dedicated Server             #"
			echo "# 12 - Chivalry Medieval Warfare Dedicated Server          #"
			echo "# 13 - Dark Horizons: Mechanized Corps Dedicated Server    #"
			echo "# 14 - Day of Defeat Dedicated Server                      #"
			echo "# 15 - Day of Defeat: Source Dedicated Server              #"
			echo "# 16 - Day of Infamy Dedicated Server                      #"
			echo "# 17 - Deathmatch Classic Dedicated Server                 #"
			echo "# 18 - Dota 2 Dedicated Server                             #"
			echo "# 19 - Don't Starve Together Dedicated Server              #"
			echo "# 20 - Fistful of Frags Server                             #"
			echo "#                                                          #"
			echo "# <p> previous page                                        #"
			echo "# <n> next page                                            #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${menu} -eq 3 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 21 - Garry's Mod Dedicated Server                        #"
			echo "# 22 - Half-Life 2: Deathmatch Dedicated Server            #"
			echo "# 23 - Half-Life Deathmatch: Source Dedicated server       #"
			echo "# 24 - Half-Life Dedicated Server                          #"
			echo "# 25 - Half-Life: Opposing Force Server                    #"
			echo "# 26 - Insurgency 2014 Dedicated Server                    #"
			echo "# 27 - Insurgency: Modern Infantry Combat Dedicated Server #"
			echo "# 28 - Just Cause 2: Multiplayer - Dedicated Server        #"
			echo "# 29 - Killing Floor Dedicated Server - Linux              #"
			echo "# 30 - Left 4 Dead 2 Dedicated Server                      #"
			echo "#                                                          #"
			echo "# <p> previous page                                        #"
			echo "# <n> next page                                            #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${menu} -eq 4 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 31 - Left 4 Dead Dedicated Server                        #"
			echo "# 32 - Natural Selection 2 Dedicated Server                #"
			echo "# 33 - NS2: Combat Dedicated Server                        #"
			echo "# 34 - No More Room In Hell Dedicated Server               #"
			echo "# 35 - Pirates, Vikings, and Knights II Dedicated Server   #"
			echo "# 36 - Project Zomboid Dedicated Server                    #"
			echo "# 37 - Red Orchestra Linux Dedicated Server                #"
			echo "# 38 - Ricochet Dedicated Server                           #"
			echo "# 39 - Rust Dedicated Server                               #"
			echo "# 40 - Serious Sam 3 Dedicated Server                      #"
			echo "#                                                          #"
			echo "# <p> previous page                                        #"
			echo "# <n> next page                                            #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${menu} -eq 5 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 41 - Sven Co-op Dedicated Server                         #"
			echo "# 42 - Source SDK Base 2006 MP Dedicated Server            #"
			echo "# 43 - Source 2007 Dedicated Server                        #"
			echo "# 44 - Source Dedicated Server                             #"
			echo "# 45 - Source SDK Base 2013 Dedicated Server               #"
			echo "# 46 - Starbound Dedicated server                          #"
			echo "# 47 - Team Fortress 2 Dedicated Server                    #"
			echo "# 48 - Team Fortress Classic Dedicated Server              #"
			echo "# 49 - The Ship Dedicated Server                           #"
			echo "# 50 - Terraria Dedicated Server                           #"
			echo "#                                                          #"
			echo "# <p> previous page                                        #"
			echo "# <n> next page                                            #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${menu} -eq 6 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 51 - Unturned Dedicated Server                           #"
			echo "# 52 - Zombie Panic Source Dedicated Server                #"
			echo "# 53 - Hurtworld dedicated server                          #"
			echo "# 54 - Tower Unite Dedicated Server                        #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <p> previous page                                        #"
			echo "#                                                          #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		fi

		read -p "Your choice: " choice

		case ${choice} in
			0)
				break
			;;

			1|2|3|4|5|6|7|8|9|[1-4][0-9]|5[0-2])
				func_select_server ${choice}
				break
			;;
			
			n)
				[ ${menu} -ne 6 ] && menu=`expr ${menu} + 1`
			;;

			p)
				[ ${menu} -ne 1 ] && menu=`expr ${menu} - 1`
			;;

			*)
				:
			;;
		esac
	done
}

function func_select_server {
	case ${1} in
		1)
			func_install_server 294420
		;;
		
		2)
			func_install_server 376030
		;;
		
		3)
			func_install_server 233780
		;;
		
		4)
			func_install_server 346680
		;;
		
		5)
			func_install_server 346330
		;;

		6)
			func_install_server 228780
		;;
		
		7)
			func_install_server 332850
		;;
		
		8)
			func_install_server 90
		;;
		
		9)
			func_install_server 740
		;;
		
		10)
			func_install_server '90 +app_set_config "90 mod czero"'
		;;
		
		11)
			func_install_server 232330
		;;
		
		12)
			func_install_server 220070
		;;
		
		13)
			func_install_server 312070
		;;
		
		14)
			func_install_server '90 +app_set_config "90 mod dod"'
		;;
		
		15)
			func_install_server 232290
		;;
		
		16)
			func_install_server 462310
		;;
		
		17)
			func_install_server '90 +app_set_config "90 mod dmc"'
		;;
		
		18)
			func_install_server 570
		;;
		
		19)
			func_install_server 343050
		;;
		
		20)
			func_install_server 295230
		;;
		
		21)
			func_install_server 4020
		;;
		
		22)
			func_install_server 232370
		;;
		
		23)
			func_install_server 255470
		;;
		
		24)
			func_install_server 90
		;;
		
		25)
			func_install_server '90 +app_set_config "90 mod gearbox"'
		;;
		
		26)
			func_install_server 237410
		;;
		
		27)
			func_install_server 17705
		;;

		28)
			func_install_server 261140
		;;
		
		29)
			func_install_server 215360
		;;
		
		30)
			func_install_server 222860
		;;
		
		31)
			func_install_server 222840
		;;
		
		32)
			func_install_server 4940
		;;
		
		33)
			func_install_server 313900
		;;
		
		34)
			func_install_server 317670
		;;
		
		35)
			func_install_server 17575
		;;
		
		36)
			func_install_server 108600
		;;
		
		37)
			func_install_server 223250
		;;
		
		38)
			func_install_server '90 +app_set_config "90 mod ricochet"'
		;;
		
		39)
			func_install_server 258550
		;;
		
		40)
			func_install_server 41080
		;;
		
		41)
			func_install_server 276060
		;;
		
		42)
			func_install_server 205
		;;
		
		43)
			func_install_server 310
		;;
		
		44)
			func_install_server 205
		;;
		
		45)
			func_install_server 244310
		;;
		
		46)
			func_install_server 211820
		;;
		
		47)
			func_install_server 232250
		;;
		
		48)
			func_install_server '90 +app_set_config "90 mod tfc"'
		;;
		
		49)
			func_install_server 2403
		;;
		
		50)
			func_install_server 105600
		;;
		
		51)
			func_install_server 304930
		;;

		52)
			func_install_server 1750
		;;

		53)
			func_install_server 405100
		;;

		54)
			func_install_server 439660
		;;
		
		*)
			:
		;;
	esac
}

function func_install_server {
	local anonymous
	local installdir
	local username
	local password

	[ ! -d steamcmd ] && mkdir steamcmd
	cd steamcmd

	if [ ! -f steamcmd_linux.tar.gz ]; then
		wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
		tar -xvzf steamcmd_linux.tar.gz
	fi
	
	if [ -z ${2} ]; then
		local counter=1
		local gameid=`echo ${1} | cut -d+ -f1 | xargs`
		
		if [ ${gameid} -eq 90 ]; then
			local hlmod=`awk '{print $NF}' <<< "${1}" | cut -d'"' -f1`
			
			[ ${hlmod} != "90" ] && gameid="${gameid}-${hlmod}"
		fi
		
		while [ -d ../servers/${gameid}-${counter} ]; do
			counter=`expr ${counter} + 1`
		done
	
		installdir="../servers/${gameid}-${counter}"		
	else
		installdir="${2}"
	fi

	while true; do
		clear
		echo "############################################################"
		echo "#                                                          #"
		echo "#                       ANONYOUS LOGIN                     #"
		echo "#                                                          #"
		echo "############################################################"
		echo "#                                                          #"
		echo "# Please note:                                             #"
		echo "# Game purchase is required at some games...               #"
		echo "#                                                          #"
		echo "# If the installation fails with                           #"
		echo "# ERROR! Failed to install app '%APPID%' (No subscription) #"
		echo "# please install the game at main menu item 2 - update and #"
		echo "# login with your steam credentials...                     #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "############################################################"
		read -p "Login anonymous? <Y/N>: " input_anonymous

		case ${input_anonymous} in
			[Yy]|[Yy][Ee][Ss])
				anonymous=0
				break
			;;
	
			[Nn]|[Nn][Oo])
				anonymous=1
				break
			;;

			*)
				:
			;;
		esac
	done

	if [ ${anonymous} -eq 1 ]; then
		read -p "Username: " username
		read -s -p "Password: " password

		if [ "${CROSSPLATFORM}" = "LINUX" ]; then
			./steamcmd.sh +login ${username} ${password} +force_install_dir ${installdir} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "WINDOWS" ]; then
			./steamcmd.sh +@sSteamCmdForcePlatformType windows +login ${username} ${password} +force_install_dir ${installdir} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "MACOS" ]; then
			./steamcmd.sh +@sSteamCmdForcePlatformType macos +login ${username} ${password} +force_install_dir ${installdir} +app_update ${1} +quit
		fi
	else
		if [ "${CROSSPLATFORM}" = "LINUX" ]; then
			./steamcmd.sh +login anonymous +force_install_dir ${installdir} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "WINDOWS" ]; then
			./steamcmd.sh +@sSteamCmdForcePlatformType windows +login anonymous +force_install_dir ${installdir} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "MACOS" ];then
			./steamcmd.sh +@sSteamCmdForcePlatformType macos +login anonymous +force_install_dir ${installdir} +app_update ${1} +quit
		fi
	fi

	read -rsp $'Press any key to continue...' -n1 anykey

	if [ ! -L ~/.steam/sdk32 ]; then
		[ ! -d ~/.steam ] && mkdir ~/.steam
		ln -s ~/steamcmd/linux32 ~/.steam/sdk32
	fi
	
	cd /home/steam
}

function func_manage_server {
	local counter
	local gameid
	local installdir

	clear
	echo "############################################################"
	echo "#                                                          #"
	echo "#                          MANAGE                          #"
	echo "#                                                          #"
	echo "############################################################"
	if [ `ls -A /home/steam/servers | wc -l` -eq 0 ]; then
		echo "No server(s) found..."
		read -rsp $'Press any key to continue...' -n1 anykey
	else
		PS3="Select a installation folder - <0> back: "

		select folder in /home/steam/servers/*; do
			[ ${REPLY} -eq 0 >/dev/null 2>&1 ] && break
			[ -z ${folder} ] && break
			
			if [ "${1}" = "UPDATE" ]; then
				installdir=`echo "${folder}" | cut -d/ -f5`
				gameid=`echo "${installdir}" | cut -d- -f1`

				if [ ${gameid} -eq 90 ]; then
					local mod=`echo "${installdir}" | cut -d- -f2`
	
					case ${mod} in
						czero)
							func_install_server '90 +app_set_config "90 mod czero"' ${folder}
						;;

						dod)
							func_install_server '90 +app_set_config "90 mod dod"' ${folder}
						;;

						dmc)
							func_install_server '90 +app_set_config "90 mod dmc"' ${folder}
						;;

						gearbox)
							func_install_server '90 +app_set_config "90 mod gearbox"' ${folder}
						;;

						ricochet)
							func_install_server '90 +app_set_config "90 mod ricochet"' ${folder}
						;;

						tfc)
							func_install_server '90 +app_set_config "90 mod tfc"' ${folder}
						;;

						*)
							func_install_server 90 ${folder}
						;;
					esac
				else
					func_install_server ${gameid} ${folder}
				fi
			elif [ "${1}" = "REMOVE" ]; then
				while true; do
					clear
					echo "############################################################"
					echo "#                                                          #"
					echo "#                          REMOVE                          #"
					echo "#                                                          #"
					echo "############################################################"
					echo "Are you sure you want to remove:"
					echo "${folder}"

					read -p "Confirm <Y/N>: " input_remove

					case ${input_remove} in
						[Yy]|[Yy][Ee][Ss])
							rm -rf ${folder}
							break
						;;

						[Nn]|[Nn][Oo])
							break
						;;

						*)
							:
						;;	
					esac
				done
			fi
			break
		done
	fi
}

function func_advanced {
	local input_gameid
	local input_platform
	local input_advanced
	
	while true; do
		clear
		echo "############################################################"
		echo "#                                                          #"
		echo "#                         ADVANCED                         #"
		echo "#                                                          #"
		echo "############################################################"
		echo "#                                                          #"
		echo "#  1 - Enter GAME-ID manually                              #"
		echo "#  2 - Cross-Platform installation settings                #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "# <0> - back to main menu                                  #"
		echo "#                                                          #"
		echo "############################################################"
		read -p "Your choice: " input_advanced

		case ${input_advanced} in
			0)
				break
			;;
			1)
				clear
				echo "############################################################"
				echo "#                                                          #"
				echo "#                         GAME-ID                          #"
				echo "#                                                          #"
				echo "############################################################"
				echo "Current platform: ${CROSSPLATFORM}"
				echo "<0> - Back"
				read -p "GAME-ID: " input_gameid

				[ ${input_gameid} -ne 0 ] && func_install_server ${input_gameid}
			;;
			
			2)
				while true; do
					clear
					echo "############################################################"
					echo "#                                                          #"
					echo "#                      Cross-Platform                      #"
					echo "#                                                          #"
					echo "############################################################"
					echo "#                                                          #"
					echo "#  1 - LINUX                                               #"
					echo "#  2 - WINDOWS                                             #"
					echo "#  3 - MACOS                                               #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "# <0> - back                                               #"
					echo "#                                                          #"
					echo "############################################################"
					read -p "Please select a platform (Current = ${CROSSPLATFORM}): " input_platform

					case ${input_platform} in
						0)
							break
						;;

						1)
							CROSSPLATFORM="LINUX"
							break
						;;

						2)
							CROSSPLATFORM="WINDOWS"
							break
						;;

						3)
							CROSSPLATFORM="MACOS"
							break
						;;

						*)
							:
						;;
					esac
				done
			;;

			*)
				:
			;;
		esac
	done
}

function func_help {
	local menu=1
	local choice

	while true; do
		if [ ${menu} -eq 1 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                           HELP                           #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "#  Arch Linux - first enable the multilib repository       #"
			echo "#  pacman -S lib32-gcc-libs                                #"
			echo "#                                                          #"
			echo "#  Debian based distributions (Ubuntu, Mint, etc.)         #"
			echo "#  sudo apt-get install lib32stdc++6                       #"
			echo "#                                                          #"
			echo "#  Debian based distributions (Ubuntu, Mint, etc.) 64-bit  #"
			echo "#  dpkg --add-architecture i386                            #"
			echo "#  apt-get update                                          #"
			echo "#  apt-get install lib32gcc1 lib32stdc++6                  #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <n> next page                                            #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${menu} -eq 2 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                           HELP                           #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "#  RedHat/CentOS                                           #"
			echo "#  yum install glibc libstdc++                             #"
			echo "#                                                          #"
			echo "#  RedHat/CentOS 64-Bit                                    #"
			echo "#  yum install glibc.i686 libstdc++.i686                   #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <p> previous page                                        #"
			echo "#                                                          #"
			echo "# <0> - back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		fi

		read -p "Your choice: " choice

		case ${choice} in
                        0)
                                break
                        ;;

                        n)
                                [ ${menu} -ne 2 ] && menu=`expr ${menu} + 1`
                        ;;

                        p)
                                [ ${menu} -ne 1 ] && menu=`expr ${menu} - 1`
                        ;;

                        *)
                                :
                        ;;
                esac
        done
}

#MAIN
if [ ! -d "/home/steam" ]; then
        if [ `id -u` -ne 0 ]; then
                echo "Please run the script as root first"
                exit 1
        else
                #ulimit -n 2048

                #if ! iptables -L | grep 'udp spts:27000:27030 dpts:1025:65355' >/dev/null 2>&1; then
                #        iptables -A INPUT -p udp -m udp --sport 27000:27030 --dport 1025:65355 -j ACCEPT
                #fi

                #if ! iptables -L | grep 'udp spt:4380 dpts:1025:65355' >/dev/null 2>&1; then
                #        iptables -A INPUT -p udp -m udp --sport 4380 --dport 1025:65355 -j ACCEPT
                #fi

                if ! id -u "steam" >/dev/null 2>&1; then
                        useradd -m steam -s/bin/bash
                        echo "Please enter a password for user steam:"
                        passwd steam
                fi

                exit 0
        fi
fi

cd /home/steam

CROSSPLATFORM="LINUX"

while true
do
	clear
	echo "############################################################"
	echo "#                                                          #"
	echo "#                         MAINMENU                         #"
	echo "#                                                          #"
	echo "############################################################"
	echo "#                                                          #"
	echo "#  1 - Install server                                      #"
	echo "#  2 - Update server(s)                                    #"
	echo "#  3 - Remove a server                                     #"
	echo "#  4 - Advanced options                                    #"
	echo "#  5 - Help                                                #"
	echo "#  6 - Credits                                             #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "# <0> - Exit                                               #"
	echo "#                                                          #"
	echo "############################################################"
	read -p "Your choice: " input_menu

	case ${input_menu} in
		0)
			break
		;;

		1)
			func_gamelist
		;;

		2)
			func_manage_server "UPDATE"
		;;

		3)
			func_manage_server "REMOVE"
		;;

		4)
			func_advanced
		;;

		5)
			func_help
		;;

		6)
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                         CREDITS                          #"
			echo "#                                                          #"
			echo "############################################################"
			echo "# Made by Gincules                                         #"
			echo "# Steam: http://steamcommunity.com/id/Gincules/            #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "############################################################"
			read -rsp $'Press any key to continue...' -n1 anykey
		;;

		*)
			echo "Faulty entry - Pleare retry"
			read -rsp $'Press any key to continue...' -n1 anykey
		;;
	esac
done 
