#!/bin/bash
function FUNC_GAMELIST {
	local MENU=1
	local CHOICE

	while true; do
		if [ ${MENU} -eq 1 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "#  1 - 7 Days to Die Dedicated Server                      #"
			echo "#  2 - ARK: Survival Evolved Dedicated Server              #"
			echo "#  3 - Arma 3 Dedicated Server                             #"
			echo "#  4 - Black Mesa: Deathmatch Dedicated Server             #"
			echo "#  5 - BrainBread 2 Dedicated Server                       #"
			echo "#  6 - Blade Symphony Dedicated Server                     #"
			echo "#  7 - BlazeRush Dedicated Server                          #"
			echo "#  8 - Counter-Strike Dedicated Server                     #"
			echo "#  9 - Counter-Strike Global Offensive Dedicated Server    #"
			echo "# 10 - Counter-Strike: Condition Zero Dedicated Server     #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <n> Next page                                            #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${MENU} -eq 2 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"	
			echo "#                                                          #"				
			echo "# 11 - Counter-Strike: Source Dedicated Server             #"
			echo "# 12 - Chivalry Medieval Warfare Dedicated Server          #"
			echo "# 13 - Dark Horizons: Mechanized Corps Dedicated Server    #"
			echo "# 14 - Day of Defeat Dedicated Server                      #"
			echo "# 15 - Day of Defeat: Source Dedicated Server              #"
			echo "# 16 - Day of Infamy Dedicated Server                      #"
			echo "# 17 - Deathmatch Classic Dedicated Server                 #"
			echo "# 18 - Dota 2 Dedicated Server                             #"
			echo "# 19 - Don't Starve Together Dedicated Server              #"
			echo "# 20 - Fistful of Frags Server                             #"
			echo "#                                                          #"
			echo "# <p> Previous page                                        #"
			echo "# <n> Next page                                            #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"	
			echo "############################################################"
		elif [ ${MENU} -eq 3 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 21 - Garry's Mod Dedicated Server                        #"
			echo "# 22 - Half-Life 2: Deathmatch Dedicated Server            #"
			echo "# 23 - Half-Life Deathmatch: Source Dedicated server       #"
			echo "# 24 - Half-Life Dedicated Server                          #"
			echo "# 25 - Half-Life: Opposing Force Server                    #"
			echo "# 26 - Insurgency 2014 Dedicated Server                    #"
			echo "# 27 - Insurgency: Modern Infantry Combat Dedicated Server #"
			echo "# 28 - Just Cause 2: Multiplayer - Dedicated Server        #"
			echo "# 29 - Killing Floor Dedicated Server - Linux              #"
			echo "# 30 - Left 4 Dead 2 Dedicated Server                      #"
			echo "#                                                          #"
			echo "# <p> Previous page                                        #"
			echo "# <n> Next page                                            #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"	
			echo "############################################################"
		elif [ ${MENU} -eq 4 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 31 - Left 4 Dead Dedicated Server                        #"
			echo "# 32 - Natural Selection 2 Dedicated Server                #"
			echo "# 33 - NS2: Combat Dedicated Server                        #"
			echo "# 34 - No More Room In Hell Dedicated Server               #"
			echo "# 35 - Pirates, Vikings, and Knights II Dedicated Server   #"
			echo "# 36 - Project Zomboid Dedicated Server                    #"
			echo "# 37 - Red Orchestra Linux Dedicated Server                #"
			echo "# 38 - Ricochet Dedicated Server                           #"
			echo "# 39 - Rust Dedicated Server                               #"
			echo "# 40 - Serious Sam 3 Dedicated Server                      #"
			echo "#                                                          #"
			echo "# <p> Previous page                                        #"
			echo "# <n> Next page                                            #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"	
			echo "############################################################"
		elif [ ${MENU} -eq 5 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 41 - Sven Co-op Dedicated Server                         #"
			echo "# 42 - Source SDK Base 2006 MP Dedicated Server            #"
			echo "# 43 - Source 2007 Dedicated Server                        #"
			echo "# 44 - Source Dedicated Server                             #"
			echo "# 45 - Source SDK Base 2013 Dedicated Server               #"
			echo "# 46 - Starbound Dedicated server                          #"
			echo "# 47 - Team Fortress 2 Dedicated Server                    #"
			echo "# 48 - Team Fortress Classic Dedicated Server              #"
			echo "# 49 - The Ship Dedicated Server                           #"
			echo "# 50 - Terraria Dedicated Server                           #"
			echo "#                                                          #"
			echo "# <p> Previous page                                        #"
			echo "# <n> Next page                                            #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"	
			echo "############################################################"
		elif [ ${MENU} -eq 6 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                       SELECT A GAME                      #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "# 51 - Unturned Dedicated Server                           #"
			echo "# 52 - Zombie Panic Source Dedicated Server                #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <p> Prevoius page                                        #"
			echo "#                                                          #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		fi

		read -p "Your choice: " CHOICE

		case ${CHOICE} in
			0)
				break
			;;

			[1-4]*|5|6|7|8|9|50|51|52)
				FUNC_SELECT_SERVER ${CHOICE}
				break
			;;
			
			n)
				[ ${MENU} -ne 6 ] && MENU=`expr ${MENU} + 1`
			;;

			p)
				[ ${MENU} -ne 1 ] && MENU=`expr ${MENU} - 1`
			;;

			*)
				ERROR="WHOOPS SOMETHING WENT WRONG"
			;;
		esac
	done
}

function FUNC_SELECT_SERVER {
	case ${1} in
		1)
			FUNC_INSTALL_SERVER 294420
		;;
		
		2)
			FUNC_INSTALL_SERVER 376030
		;;
		
		3)
			FUNC_INSTALL_SERVER 233780
		;;
		
		4)
			FUNC_INSTALL_SERVER 346680
		;;
		
		5)
			FUNC_INSTALL_SERVER 346330
		;;

		6)
			FUNC_INSTALL_SERVER 228780
		;;
		
		7)
			FUNC_INSTALL_SERVER 332850
		;;
		
		8)
			FUNC_INSTALL_SERVER 90
		;;
		
		9)
			FUNC_INSTALL_SERVER 740
		;;
		
		10)
			FUNC_INSTALL_SERVER '90 +app_set_config "90 mod czero"'
		;;
		
		11)
			FUNC_INSTALL_SERVER 232330
		;;
		
		12)
			FUNC_INSTALL_SERVER 220070
		;;
		
		13)
			FUNC_INSTALL_SERVER 312070
		;;
		
		14)
			FUNC_INSTALL_SERVER '90 +app_set_config "90 mod dod"'
		;;
		
		15)
			FUNC_INSTALL_SERVER 232290
		;;
		
		16)
			FUNC_INSTALL_SERVER 462310
		;;
		
		17)
			FUNC_INSTALL_SERVER '90 +app_set_config "90 mod dmc"'
		;;
		
		18)
			FUNC_INSTALL_SERVER 570
		;;
		
		19)
			FUNC_INSTALL_SERVER 343050
		;;
		
		20)
			FUNC_INSTALL_SERVER 295230
		;;
		
		21)
			FUNC_INSTALL_SERVER 4020
		;;
		
		22)
			FUNC_INSTALL_SERVER 232370
		;;
		
		23)
			FUNC_INSTALL_SERVER 255470
		;;
		
		24)
			FUNC_INSTALL_SERVER 90
		;;
		
		25)
			FUNC_INSTALL_SERVER '90 +app_set_config "90 mod gearbox"'
		;;
		
		26)
			FUNC_INSTALL_SERVER 237410
		;;
		
		27)
			FUNC_INSTALL_SERVER 17705
		;;

		28)
			FUNC_INSTALL_SERVER 261140
		;;
		
		29)
			FUNC_INSTALL_SERVER 215360
		;;
		
		30)
			FUNC_INSTALL_SERVER 222860
		;;
		
		31)
			FUNC_INSTALL_SERVER 222840
		;;
		
		32)
			FUNC_INSTALL_SERVER 4940
		;;
		
		33)
			FUNC_INSTALL_SERVER 313900
		;;
		
		34)
			FUNC_INSTALL_SERVER 317670
		;;
		
		35)
			FUNC_INSTALL_SERVER 17575
		;;
		
		36)
			FUNC_INSTALL_SERVER 108600
		;;
		
		37)
			FUNC_INSTALL_SERVER 223250
		;;
		
		38)
			FUNC_INSTALL_SERVER '90 +app_set_config "90 mod ricochet"'
		;;
		
		39)
			FUNC_INSTALL_SERVER 258550
		;;
		
		40)
			FUNC_INSTALL_SERVER 41080
		;;
		
		41)
			FUNC_INSTALL_SERVER 276060
		;;
		
		42)
			FUNC_INSTALL_SERVER 205
		;;
		
		43)
			FUNC_INSTALL_SERVER 310
		;;
		
		44)
			FUNC_INSTALL_SERVER 205
		;;
		
		45)
			FUNC_INSTALL_SERVER 244310
		;;
		
		46)
			FUNC_INSTALL_SERVER 211820
		;;
		
		47)
			FUNC_INSTALL_SERVER 232250
		;;
		
		48)
			FUNC_INSTALL_SERVER '90 +app_set_config "90 mod tfc"'
		;;
		
		49)
			FUNC_INSTALL_SERVER 2403
		;;
		
		50)
			FUNC_INSTALL_SERVER 105600
		;;
		
		51)
			FUNC_INSTALL_SERVER 304930
		;;

		52)
			FUNC_INSTALL_SERVER 1750
		;;
		
		*)
			ERROR="WHOOPS SOMETHING WENT WRONG"
		;;
	esac
}

function FUNC_INSTALL_SERVER {
	local ANONYMOUS
	local INSTALLDIR
	local PASSWORD
	local USERNAME

	[ ! -d steamcmd ] && mkdir steamcmd
	cd steamcmd

	if [ ! -f steamcmd_linux.tar.gz ]; then
		wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
		tar -xvzf steamcmd_linux.tar.gz
	fi
	
	if [ -z ${2} ]; then
		local COUNTER=1
		local GAMEID=`echo ${1} | cut -d+ -f1 | xargs`
		
		if [ ${GAMEID} -eq 90 ]; then
			local HL_MOD=`awk '{print $NF}' <<< "${1}" | cut -d'"' -f1`
			
			[ ${HL_MOD} != "90" ] && GAMEID="${GAMEID}-${HL_MOD}"
		fi
		
		while [ -d ../servers/${GAMEID}-${COUNTER} ]; do
			COUNTER=`expr ${COUNTER} + 1`
		done
	
		INSTALLDIR="../servers/${GAMEID}-${COUNTER}"		
	else
		INSTALLDIR="${2}"
	fi

	while true; do
		clear
		echo "############################################################"
		echo "#                                                          #"
		echo "#                       ANONYOUS LOGIN                     #"
		echo "#                                                          #"
		echo "############################################################"
		echo "#                                                          #"
		echo "# Please note:                                             #"
		echo "# Game purchase is required at some games...               #"
		echo "#                                                          #"
		echo "# If the installation fails with                           #"
		echo "# ERROR! Failed to install app '%APPID%' (No subscription) #"
		echo "# please install the game at main menu item 2 - update and #"
		echo "# login with your steam credentials...                     #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "############################################################"
		read -p "Login anonymous? <Y/N>: " INPUT_ANONYMOUS

		case ${INPUT_ANONYMOUS} in
			[Yy]|[Yy][Ee][Ss])
				ANONYMOUS=0
				break
			;;
	
			[Nn]|[Nn][Oo])
				ANONYMOUS=1
				break
			;;

			*)
				ERROR="WHOOPS SOMETHING WENT WRONG"
			;;
		esac
	done

	if [ ${ANONYMOUS} -eq 1 ]; then
		read -p "Username: " USERNAME
		read -s -p "Password: " PASSWORD

		if [ "${CROSSPLATFORM}" = "LINUX" ]; then
			./steamcmd.sh +login ${USERNAME} ${PASSWORD} +force_install_dir ${INSTALLDIR} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "WINDOWS" ]; then
			./steamcmd.sh +@sSteamCmdForcePlatformType windows +login ${USERNAME} ${PASSWORD} +force_install_dir ${INSTALLDIR} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "MACOS" ]; then
			./steamcmd.sh +@sSteamCmdForcePlatformType macos +login ${USERNAME} ${PASSWORD} +force_install_dir ${INSTALLDIR} +app_update ${1} +quit
		fi
	else
		if [ "${CROSSPLATFORM}" = "LINUX" ]; then
			./steamcmd.sh +login anonymous +force_install_dir ${INSTALLDIR} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "WINDOWS" ]; then
			./steamcmd.sh +@sSteamCmdForcePlatformType windows +login anonymous +force_install_dir ${INSTALLDIR} +app_update ${1} +quit
		elif [ "${CROSSPLATFORM}" = "MACOS" ];then
			./steamcmd.sh +@sSteamCmdForcePlatformType macos +login anonymous +force_install_dir ${INSTALLDIR} +app_update ${1} +quit
		fi
	fi

	read -rsp $'Press any key to continue...' -n1 ANYKEY

	if [ ! -L ~/.steam/sdk32 ]; then
		[ ! -d ~/.steam ] && mkdir ~/.steam
		ln -s ~/steamcmd/linux32 ~/.steam/sdk32
	fi
	
	cd /home/steam
}

function FUNC_MANAGE_SERVER {
	local COUNTER
	local GAMEID
	local INSTALLDIR

	clear
	echo "############################################################"
	echo "#                                                          #"
	echo "#                          MANAGE                          #"
	echo "#                                                          #"
	echo "############################################################"
	if [ `ls -A /home/steam/servers | wc -l` -eq 0 ]; then
		echo "No server(s) found..."
		read -rsp $'Press any key to continue...' -n1 ANYKEY
	else
		PS3="Select a installation folder - <0> back: "

		select FOLDER in /home/steam/servers/*; do
			[ ${REPLY} -eq 0 >/dev/null 2>&1 ] && break
			[ -z ${FOLDER} ] && break
			
			if [ "${1}" = "UPDATE" ]; then
				INSTALLDIR=`echo "${FOLDER}" | cut -d/ -f5`
				GAMEID=`echo "${INSTALLDIR}" | cut -d- -f1`

				if [ ${GAMEID} -eq 90 ]; then
					local MOD=`echo "${INSTALLDIR}" | cut -d- -f2`
	
					case ${MOD} in
						czero)
							FUNC_INSTALL_SERVER '90 +app_set_config "90 mod czero"' ${FOLDER}
						;;

						dod)
							FUNC_INSTALL_SERVER '90 +app_set_config "90 mod dod"' ${FOLDER}
						;;

						dmc)
							FUNC_INSTALL_SERVER '90 +app_set_config "90 mod dmc"' ${FOLDER}
						;;

						gearbox)
							FUNC_INSTALL_SERVER '90 +app_set_config "90 mod gearbox"' ${FOLDER}
						;;

						ricochet)
							FUNC_INSTALL_SERVER '90 +app_set_config "90 mod ricochet"' ${FOLDER}
						;;

						tfc)
							FUNC_INSTALL_SERVER '90 +app_set_config "90 mod tfc"' ${FOLDER}
						;;

						*)
							FUNC_INSTALL_SERVER 90 ${FOLDER}
						;;
					esac
				else
					FUNC_INSTALL_SERVER ${GAMEID} ${FOLDER}
				fi
			elif [ "${1}" = "REMOVE" ]; then
				while true; do
					clear
					echo "############################################################"
					echo "#                                                          #"
					echo "#                          REMOVE                          #"
					echo "#                                                          #"
					echo "############################################################"
					echo "Are you sure you want to remove:"
					echo "${FOLDER}"

					read -p "Confirm <Y/N>: " INPUT_REMOVE

					case ${INPUT_REMOVE} in
						[Yy]|[Yy][Ee][Ss])
							rm -rf ${FOLDER}
							break
						;;

						[Nn]|[Nn][Oo])
							break
						;;

						*)
							ERROR="WHOOPS SOMETHING WENT WRONG"
						;;	
					esac
				done
			fi
			break
		done
	fi
}

function FUNC_ADVANCED {
	local INPUT_GAMEID
	local INPUT_PLATFORM
	local INPUT_ADVANCED
	
	while true; do
		clear
		echo "############################################################"
		echo "#                                                          #"
		echo "#                         ADVANCED                         #"
		echo "#                                                          #"
		echo "############################################################"
		echo "#                                                          #"
		echo "#  1 - Enter GAME-ID manually                              #"
		echo "#  2 - Cross-Platform installation settings                #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "#                                                          #"
		echo "# <0> - Back to main menu                                  #"
		echo "#                                                          #"
		echo "############################################################"
		read -p "Your choice: " INPUT_ADVANCED

		case $INPUT_ADVANCED in
			0)
				break
			;;
			1)
				clear
				echo "############################################################"
				echo "#                                                          #"
				echo "#                         GAME-ID                          #"
				echo "#                                                          #"
				echo "############################################################"
				echo "Current platform: ${CROSSPLATFORM}"
				echo "<0> - Back"
				read -p "GAME-ID: " INPUT_GAMEID

				[ ${INPUT_GAMEID} -ne 0 ] && FUNC_INSTALL_SERVER ${INPUT_GAMEID}
			;;
			
			2)
				while true; do
					clear
					echo "############################################################"
					echo "#                                                          #"
					echo "#                      Cross-Platform                      #"
					echo "#                                                          #"
					echo "############################################################"
					echo "#                                                          #"
					echo "#  1 - LINUX                                               #"
					echo "#  2 - WINDOWS                                             #"
					echo "#  3 - MACOS                                               #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "#                                                          #"
					echo "# <0> - Back                                               #"
					echo "#                                                          #"
					echo "############################################################"
					read -p "Please select a platform (Current = ${CROSSPLATFORM}): " INPUT_PLATFORM

					case ${INPUT_PLATFORM} in
						0)
							break
						;;

						1)
							CROSSPLATFORM="LINUX"
							break
						;;

						2)
							CROSSPLATFORM="WINDOWS"
							break
						;;

						3)
							CROSSPLATFORM="MACOS"
							break
						;;

						*)
							ERROR="WHOOPS SOMETHING WENT WRONG"
						;;
					esac
				done
			;;

			*)
				ERROR="WHOOPS SOMETHING WENT WRONG"
			;;
		esac
	done
}

function FUNC_HELP {
	local MENU=1
	local CHOICE

	while true; do
		if [ ${MENU} -eq 1 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                           HELP                           #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "#  Arch Linux - first enable the multilib repository       #"
			echo "#  pacman -S lib32-gcc-libs                                #"
			echo "#                                                          #"
			echo "#  Debian based distributions (Ubuntu, Mint, etc.)         #"
			echo "#  sudo apt-get install lib32stdc++6                       #"
			echo "#                                                          #"
			echo "#  Debian based distributions (Ubuntu, Mint, etc.) 64-bit  #"
			echo "#  dpkg --add-architecture i386                            #"
			echo "#  apt-get update                                          #"
			echo "#  apt-get install lib32gcc1 lib32stdc++6                  #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <n> Next page                                            #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		elif [ ${MENU} -eq 2 ]; then
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                           HELP                           #"
			echo "#                                                          #"
			echo "############################################################"
			echo "#                                                          #"
			echo "#  RedHat/CentOS                                           #"
			echo "#  yum install glibc libstdc++                             #"
			echo "#                                                          #"
			echo "#  RedHat/CentOS 64-Bit                                    #"
			echo "#  yum install glibc.i686 libstdc++.i686                   #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "#                                                          #"
			echo "# <p> Previous page                                        #"
			echo "#                                                          #"
			echo "# <0> - Back to main menu                                  #"
			echo "#                                                          #"
			echo "############################################################"
		fi

		read -p "Your choice: " CHOICE

		case ${CHOICE} in
                        0)
                                break
                        ;;

                        n)
                                [ ${MENU} -ne 2 ] && MENU=`expr ${MENU} + 1`
                        ;;

                        p)
                                [ ${MENU} -ne 1 ] && MENU=`expr ${MENU} - 1`
                        ;;

                        *)
                                ERROR="WHOOPS SOMETHING WENT WRONG"
                        ;;
                esac
        done
}

#MAIN
if [ ! -d "/home/steam" ]; then
        if [ `id -u` -ne 0 ]; then
                echo "Please run the script as root first"
                exit 1
        else
                ulimit -n 2048

                if ! iptables -L | grep 'udp spts:27000:27030 dpts:1025:65355' >/dev/null 2>&1; then
                        iptables -A INPUT -p udp -m udp --sport 27000:27030 --dport 1025:65355 -j ACCEPT
                fi

                if ! iptables -L | grep 'udp spt:4380 dpts:1025:65355' >/dev/null 2>&1; then
                        iptables -A INPUT -p udp -m udp --sport 4380 --dport 1025:65355 -j ACCEPT
                fi

                if ! id -u "steam" >/dev/null 2>&1; then
                        useradd -m steam -s/bin/bash
                        echo "Please enter a password for user steam:"
                        passwd steam
                fi

                exit 0
        fi
fi

cd /home/steam

CROSSPLATFORM="LINUX"

while true
do
	clear
	echo "############################################################"
	echo "#                                                          #"
	echo "#                         MAINMENU                         #"
	echo "#                                                          #"
	echo "############################################################"
	echo "#                                                          #"
	echo "#  1 - Install server                                      #"
	echo "#  2 - Update server(s)                                    #"
	echo "#  3 - Remove a server                                     #"
	echo "#  4 - Advanced options                                    #"
	echo "#  5 - Help                                                #"
	echo "#  6 - Credits                                             #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "#                                                          #"
	echo "# <0> - Exit                                               #"
	echo "#                                                          #"
	echo "############################################################"
	read -p "Your choice: " INPUT_MENU

	case $INPUT_MENU in
		0)
			break
		;;

		1)
			FUNC_GAMELIST
		;;

		2)
			FUNC_MANAGE_SERVER "UPDATE"
		;;

		3)
			FUNC_MANAGE_SERVER "REMOVE"
		;;

		4)
			FUNC_ADVANCED
		;;

		5)
			FUNC_HELP
		;;

		6)
			clear
			echo "############################################################"
			echo "#                                                          #"
			echo "#                         CREDITS                          #"
			echo "#                                                          #"
			echo "############################################################"
			echo "Made by stoerzi94"
			echo "Steam: 453724213 - http://steamcommunity.com/id/stoerzi94/"
			echo "Steamgroup: http://steamcommunity.com/groups/luma-servers/"
			read -rsp $'Press any key to continue...' -n1 ANYKEY
		;;

		*)
			echo "Faulty entry - Pleare retry"
			read -rsp $'Press any key to continue...' -n1 ANYKEY
		;;
	esac
done 
